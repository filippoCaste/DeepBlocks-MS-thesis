{
    "blocks": {
        "Input": [
            {
                "name": "Input Dataset (from huggingface.co)",
                "function": null,
                "parameters": [
                    {"name": "input_dataset", "description": "Input dataset from huggingface.co/datasets (e.g. 'dair-ai/emotion')", "value": null},
                    {"name": "dataset_split", "description": "Dataset split from huggingface.co/datasets (e.g. 'train', 'validation', 'test')", "value": null},
                    {"name": "dataset_type", "description": "Dataset type from huggingface.co/datasets (currently could be either 'text' or 'image')", "value": null},
                    {"name": "dataset_config", "description": "Dataset configuration (e.g. 'default'). This is indicated in from huggingface.co/datasets when you click in the 'Use in the Datasets library' button as a second argument of the load_dataset function.", "value": null}
                ]
            }

        ],
        "Normalization": [
            {
                "name": "Batch Normalization 1D",
                "function": "torch.nn.BatchNorm1d",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "features", "description": "Number of features", "value": null },
                    { "name": "momentum", "description": "Momentum", "value": null },
                    { "name": "eps", "description": "Epsilon", "value": null },
                    { "name": "affine", "description": "Whether to use learnable affine parameters", "value": null }
                ]
            },
            {
                "name": "Batch Normalization 2D",
                "function": "torch.nn.BatchNorm2d",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "features", "description": "Number of features", "value": null },
                    { "name": "momentum", "description": "Momentum", "value": null },
                    { "name": "eps", "description": "Epsilon", "value": null },
                    { "name": "affine", "description": "Whether to use learnable affine parameters", "value": null }
                ]
            },
            {
                "name": "Layer Normalization",
                "function": "torch.nn.LayerNorm",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "normalized_shape", "description": "Input size or shape", "value": null },
                    { "name": "eps", "description": "Epsilon", "value": null },
                    { "name": "elementwise_affine", "description": "Whether to apply affine transformation element-wise", "value": null }
                ]
            }
        ],
        "Element-wise": [
            {
                "name": "Addition",
                "function": "torch.add",
                "parameters": [
                    { "name": "tensor1", "description": "First tensor", "value": null },
                    { "name": "tensor2", "description": "Second tensor", "value": null }
                ]
            },
            {
                "name": "Subtraction",
                "function": "torch.sub",
                "parameters": [
                    { "name": "tensor1", "description": "First tensor", "value": null },
                    { "name": "tensor2", "description": "Second tensor", "value": null }
                ]
            },
            {
                "name": "Multiplication",
                "function": "torch.mul",
                "parameters": [
                    { "name": "tensor1", "description": "First tensor", "value": null },
                    { "name": "tensor2", "description": "Second tensor", "value": null }
                ]
            },
            {
                "name": "Division",
                "function": "torch.div",
                "parameters": [
                    { "name": "tensor1", "description": "First tensor", "value": null },
                    { "name": "tensor2", "description": "Second tensor", "value": null }
                ]
            }
        ],
        "Regularization": [
            {
                "name": "Dropout",
                "function": "torch.nn.Dropout",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "probability", "description": "Dropout probability", "value": null }
                ]
            }
        ],
        "Activation": [
            {
                "name": "Sigmoid",
                "function": "torch.nn.Sigmoid",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "input_tensor", "description": "Input tensor", "value": null },
                    { "name": "output_tensor", "description": "Output tensor", "value": null }
                ]
            },
            {
                "name": "Tanh",
                "function": "torch.nn.Tanh",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "input_tensor", "description": "Input tensor", "value": null },
                    { "name": "output_tensor", "description": "Output tensor", "value": null }

                ]
            },
            {
                "name": "ReLU",
                "function": "torch.nn.ReLU",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "input_tensor", "description": "Input tensor", "value": null },
                    { "name": "output_tensor", "description": "Output tensor", "value": null }
                ]
            },
            {
                "name": "Leaky ReLU",
                "function": "torch.nn.LeakyReLU",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "input_tensor", "description": "Input tensor", "value": null },
                    { "name": "output_tensor", "description": "Output tensor", "value": null },
                    { "name": "negative_slope", "description": "Negative slope", "value": null }
                ]
            },
            {
                "name": "Softmax",
                "function": "torch.nn.Softmax",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "input_tensor", "description": "Input tensor", "value": null },
                    { "name": "output_tensor", "description": "Output tensor", "value": null },
                    { "name": "dim", "description": "Dimension along which softmax will be computed", "value": null }
                ]
            },
            {
                "name": "Multihead Attention",
                "function": "torch.nn.MultiheadAttention",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "dim", "description": "Total dimension of model input", "value": null },
                    { "name": "parallel_attention_heads", "description": "Number of parallel attention heads", "value": null },
                    { "name": "dropout_probability", "description": "Dropout probability", "value": null },
                    { "name": "add_bias_to_key_value_sequences", "description": "Whether to add bias to the key and value sequences", "value": null },
                    { "name": "check_for_others", "description": "Add more and check this attention", "value": null }
                ]
            }
        ],
        "Pooling": [
            {
                "name": "Max Pooling",
                "function": "torch.nn.MaxPool2d",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "input_tensor", "description": "Input tensor", "value": null },
                    { "name": "output_tensor", "description": "Output tensor", "value": null },
                    { "name": "kernel_size", "description": "Kernel size", "value": null },
                    { "name": "stride", "description": "Stride", "value": null },
                    { "name": "padding", "description": "Padding", "value": null }
                ]
            },
            {
                "name": "Average Pooling",
                "function": "torch.nn.AvgPool2d",
                "parameters": [
                    { "name": "layer_type", "description": "Type of the layer", "value": null},
                    { "name": "kernel_size", "description": "Size of the convolving kernel", "value": null},
                    { "name": "input_tensor", "description": "Input tensor", "value": null },
                    { "name": "output_tensor", "description": "Output tensor", "value": null },
                    { "name": "kernel_size", "description": "Kernel size", "value": null },
                    { "name": "stride", "description": "Stride", "value": null },
                    { "name": "padding", "description": "Padding", "value": null }
                ]
            }
        ]
    }
}
