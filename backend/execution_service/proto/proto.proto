syntax = "proto3";

service Trainer {
  // Train the network
  rpc TrainNetwork (Network) returns (NetworkResult) {}
  // Export to file (onnx or pth)
  rpc ExportNetwork (Network) returns (File) {}
  // Forward single block to the network
  rpc ForwardBlock (Network) returns (ForwardResult) {}
}

message Parameters {
  string key = 1;
  string value = 2;
}

message Node {
  string id = 1;
  string function = 2; // is the pytorch function name
  repeated Parameters parameters = 3;
}

message Edge {
  string source = 1;
  string target = 2;
}

message File {
  bytes file_data = 1;
  string file_name = 2;
}

message Metric {
  string name = 1;
  repeated float value = 2;
}

message Network {
    repeated Node nodes = 1;
    repeated Edge edges = 2;
    repeated Parameters parameters = 3;
    repeated File files = 4;
}

message NetworkResult {
  string status = 1;
  string message = 2;
  repeated Metric metrics = 3;
}

message ForwardResult {
  string status = 1;
  string message = 2;
  repeated Parameters parameters = 3;
}